# Config file for sway
#
# Read `man 5 sway` for a complete reference.

### Variables
set $home /home/nikola
set $config $home/.config/sway

# Use Mod1 for Alt, Mod4 for Logo key.
set $mod Mod4

# # Home row direction keys, like vim
# set $left h
# set $down j
# set $up k
# set $right l

# Your preferred terminal emulator
set $term kitty
set $file_explorer dolphin

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu rofi -show drun -normal-window | xargs swaymsg exec --

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
output * bg $home/pictures/wallpaper stretch
output eDP-1 scale 1.25
output HDMI-A-1 position 0 0

hide_edge_borders smart
workspace_layout tabbed

focus_follows_mouse no
mouse_warping output

client.focused          "#323232" "#7daea3" "#32302f" "#7daea3" "#7daea3"
client.focused_inactive "#323232" "#928374" "#32302f" "#928374" "#928374"
client.unfocused        "#323232" "#222222" "#928374" "#222222" "#222222"
client.urgent           "#323232" "#ea6962" "#32302f" "#ea6962" "#ea6962"

### Idle configuration
#
# No automatic lock on inactivity (because idle detection is not 100% accurate out of the box).
# Lock screen after lid close if no other display is connected
# Turn displays off after manual lock and 300 sec of inactivity
exec swayidle -w \
    timeout 300 'if pgrep -x swaylock; then swaymsg "output * dpms off"; fi' resume 'swaymsg "output * dpms on"' \
    before-sleep "$config/lock.sh"

### Input configuration
#
input "type:keyboard" {
    xkb_layout us,bg
    xkb_variant ,phonetic
    xkb_options grp:win_space_toggle
}

input "type:touchpad" {
    dwt disabled
    accel_profile adaptive
    pointer_accel 0.5
    scroll_factor 2
    scroll_button disable   # disable on_button_down scroll with middle mouse button
    tap enabled
}

### Key bindings
#
# Uses XKB key names (list: /usr/include/xkbcommon/xkbcommon-keysyms.h)
#
# Basics:
#
    # Start a terminal
    bindsym --to-code $mod+Return exec $term

    # Kill focused window
    bindsym --to-code $mod+q kill

    # Start your launcher
    bindsym --to-code $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym --to-code $mod+Shift+c reload

    bindsym --to-code $mod+l exec $config/lock.sh

    bindsym --to-code $mod+p exec "$config/scripts/rofi-command-output.fish"
    bindsym --to-code $mod+o exec "$config/scripts/rofi-power.fish"
    bindsym --to-code Print exec "grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') - | wl-copy"
    bindsym --to-code Shift+Print exec "$config/scripts/rofi-screenshot.fish"

    # Exit sway (logs you out of your Wayland session)
    bindsym --to-code $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

    bindsym --locked --to-code XF86MonBrightnessDown exec brightnessctl set 10%-
    bindsym --locked --to-code XF86MonBrightnessUp   exec brightnessctl set +10%
    bindsym --locked --to-code XF86AudioMute         exec pactl set-sink-mute @DEFAULT_SINK@ toggle
    bindsym --locked --to-code XF86AudioLowerVolume  exec pactl set-sink-volume @DEFAULT_SINK@ -2%
    bindsym --locked --to-code XF86AudioRaiseVolume  exec pactl set-sink-volume @DEFAULT_SINK@ +2%
    bindsym --locked --to-code XF86AudioMicMute      exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

#
# Moving around:
#
    # Move your focus around
    # bindsym --to-code $mod+$left focus left
    # bindsym --to-code $mod+$down focus down
    # bindsym --to-code $mod+$up focus up
    # bindsym --to-code $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym --to-code $mod+Left focus left
    bindsym --to-code $mod+Down focus down
    bindsym --to-code $mod+Up focus up
    bindsym --to-code $mod+Right focus right

    # Move the focused window with the same, but add Shift
    # bindsym --to-code $mod+Shift+$left move left
    # bindsym --to-code $mod+Shift+$down move down
    # bindsym --to-code $mod+Shift+$up move up
    # bindsym --to-code $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym --to-code $mod+Shift+Left move left
    bindsym --to-code $mod+Shift+Down move down
    bindsym --to-code $mod+Shift+Up move up
    bindsym --to-code $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym --to-code $mod+1 workspace number 1
    bindsym --to-code $mod+2 workspace number 2
    bindsym --to-code $mod+3 workspace number 3
    bindsym --to-code $mod+4 workspace number 4
    bindsym --to-code $mod+5 workspace number 5
    bindsym --to-code $mod+6 workspace number 6
    bindsym --to-code $mod+7 workspace number 7
    bindsym --to-code $mod+8 workspace number 8
    bindsym --to-code $mod+9 workspace number 9
    bindsym --to-code $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym --to-code $mod+Shift+1 move container to workspace number 1
    bindsym --to-code $mod+Shift+2 move container to workspace number 2
    bindsym --to-code $mod+Shift+3 move container to workspace number 3
    bindsym --to-code $mod+Shift+4 move container to workspace number 4
    bindsym --to-code $mod+Shift+5 move container to workspace number 5
    bindsym --to-code $mod+Shift+6 move container to workspace number 6
    bindsym --to-code $mod+Shift+7 move container to workspace number 7
    bindsym --to-code $mod+Shift+8 move container to workspace number 8
    bindsym --to-code $mod+Shift+9 move container to workspace number 9
    bindsym --to-code $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    bindsym --to-code $mod+Comma focus output left
    bindsym --to-code $mod+Period focus output right
    bindsym --to-code $mod+Shift+Comma move workspace to output left
    bindsym --to-code $mod+Shift+Period move workspace to output right

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym --to-code $mod+b splith
    bindsym --to-code $mod+v splitv

    # Switch the current container between different layout styles
    bindsym --to-code $mod+Shift+z layout stacking
    bindsym --to-code $mod+z layout tabbed
    bindsym --to-code $mod+x layout toggle split

    # Make the current focus fullscreen
    # bindsym --to-code $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    # bindsym --to-code $mod+g floating toggle
    bindsym --to-code $mod+h floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym --to-code $mod+Tab focus mode_toggle
    bindsym --to-code $mod+Shift+Tab focus mode_toggle

    # Move focus to the parent container
    bindsym --to-code $mod+a focus parent

#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym --to-code $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym --to-code $mod+minus scratchpad show

#
# Programs:
#
    bindsym --to-code $mod+e exec $file_explorer
    bindsym --to-code $mod+f       exec env MOZ_ENABLE_WAYLAND=1 firefox
    bindsym --to-code $mod+Shift+f exec env MOZ_ENABLE_WAYLAND=1 firefox --private-window

#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    # bindsym --to-code $left resize shrink width 10px
    # bindsym --to-code $down resize grow height 10px
    # bindsym --to-code $up resize shrink height 10px
    # bindsym --to-code $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym --to-code Left resize shrink width 10px
    bindsym --to-code Down resize grow height 10px
    bindsym --to-code Up resize shrink height 10px
    bindsym --to-code Right resize grow width 10px

    # Return to default mode
    bindsym --to-code Return mode "default"
    bindsym --to-code Escape mode "default"
}
bindsym --to-code $mod+r mode "resize"

mode "gnomit" {
    bindsym --to-code c      exec sh -c "gromit-mpx --clear"
    bindsym --to-code q      exec sh -c "gromit-mpx --quit; swaymsg mode default"
    bindsym --to-code Escape exec sh -c "gromit-mpx --quit; swaymsg mode default"
}
bindsym --to-code $mod+g exec sh -c "gromit-mpx & sleep 0.01; gromit-mpx --toggle; swaymsg mode gnomit"

for_window [app_id="qalculate-gtk"] floating enable
for_window [class="Rofi"] floating enable
for_window [title="Firefox â€” Sharing Indicator"] floating enable

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top

    strip_workspace_numbers yes

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command 'python3 $config/swaybar-cmd.py'

    colors {
        background "#323232"
        statusline "#cccccc"
        focused_workspace  "#323232" "#7daea3" "#32302f"
        active_workspace   "#323232" "#928374" "#32302f"
        inactive_workspace "#323232" "#323232" "#cccccc"
        urgent_workspace   "#323232" "#ea6962" "#32302f"
    }
}

include /etc/sway/config.d/*
