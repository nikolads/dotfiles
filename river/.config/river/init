#!/bin/sh

# This is the example configuration file for river.
#
# If you wish to edit this, you will probably want to copy it to
# $XDG_CONFIG_HOME/river/init or $HOME/.config/river/init first.
#
# See the river(1), riverctl(1), and rivertile(1) man pages for complete
# documentation.

# Use the "logo" key as the primary modifier
mod="Mod4"

riverctl input "2:7:SynPS/2_Synaptics_TouchPad" accel-profile adaptive
riverctl input "2:7:SynPS/2_Synaptics_TouchPad" disable-while-typing disabled
riverctl input "2:7:SynPS/2_Synaptics_TouchPad" tap enabled

# riverctl input "1133:49298:Logitech_G102_LIGHTSYNC_Gaming_Mouse" scroll_factor 3

riverctl set-cursor-warp on-output-change

# Mod+Shift+Return to start an instance of foot (https://codeberg.org/dnkl/foot)
riverctl map normal $mod Return spawn "kitty"

# Mod+Q to close the focused view
riverctl map normal $mod Q close

# Mod+E to exit river
riverctl map normal $mod+Shift E exit

riverctl map normal $mod p spawn "$HOME/.config/rofi/scripts/rofi-power.fish"

riverctl map normal $mod l spawn "$HOME/.config/sway/lock.sh"

# Mod+J and Mod+K to focus the next/previous view in the layout stack
riverctl map normal $mod J focus-view next
riverctl map normal $mod K focus-view previous
riverctl map normal $mod Left focus-view previous
riverctl map normal $mod Right focus-view next
riverctl map normal $mod Up focus-view previous
riverctl map normal $mod Down focus-view next

# Mod+Shift+J and Mod+Shift+K to swap the focused view with the next/previous
# view in the layout stack
# riverctl map normal $mod+Shift J swap next
# riverctl map normal $mod+Shift K swap previous

# Mod+Period and Mod+Comma to focus the next/previous output
riverctl map normal $mod Period focus-output next
riverctl map normal $mod Comma focus-output previous

# Mod+Shift+{Period,Comma} to send the focused view to the next/previous output
riverctl map normal $mod+Shift Period send-to-output next
riverctl map normal $mod+Shift Comma send-to-output previous

# Mod+Return to bump the focused view to the top of the layout stack
# riverctl map normal $mod Return zoom

# Mod+H and Mod+L to decrease/increase the main_factor value of rivertile by 0.05
riverctl map normal $mod+Mod1 H mod-layout-value rivertile fixed main_factor -0.05
riverctl map normal $mod+Mod1 L mod-layout-value rivertile fixed main_factor +0.05

# Mod+Shift+H and Mod+Shift+L to increment/decrement the main_count value of rivertile.
riverctl map normal $mod+Shift+Mod1 H mod-layout-value rivertile int main_count +1
riverctl map normal $mod+Shift+Mod1 L mod-layout-value rivertile int main_count -1

# Mod+Alt+{H,J,K,L} to move views
# riverctl map normal $mod+Mod1 H move left 100
# riverctl map normal $mod+Mod1 J move down 100
# riverctl map normal $mod+Mod1 K move up 100
# riverctl map normal $mod+Mod1 L move right 100
riverctl map normal $mod+Shift Left swap previous
riverctl map normal $mod+Shift Right swap next
riverctl map normal $mod+Shift Up swap previous
riverctl map normal $mod+Shift Down swap next

# Mod+Alt+Control+{H,J,K,L} to snap views to screen edges
# riverctl map normal $mod+Mod1+Control H snap left
# riverctl map normal $mod+Mod1+Control J snap down
# riverctl map normal $mod+Mod1+Control K snap up
# riverctl map normal $mod+Mod1+Control L snap right

# Mod+Alt+Shif+{H,J,K,L} to resize views
# riverctl map normal $mod+Mod1+Shift H resize horizontal -100
# riverctl map normal $mod+Mod1+Shift J resize vertical 100
# riverctl map normal $mod+Mod1+Shift K resize vertical -100
# riverctl map normal $mod+Mod1+Shift L resize horizontal 100

# Mod + Left Mouse Button to move views
riverctl map-pointer normal $mod BTN_LEFT move-view

# Mod + Right Mouse Button to resize views
riverctl map-pointer normal $mod BTN_RIGHT resize-view

for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))

    # Mod+[1-9] to focus tag [0-8]
    riverctl map normal $mod $i set-focused-tags $tags

    # Mod+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal $mod+Shift $i set-view-tags $tags

    # Mod+Ctrl+[1-9] to toggle focus of tag [0-8]
    riverctl map normal $mod+Control $i toggle-focused-tags $tags

    # Mod+Shift+Ctrl+[1-9] to toggle tag [0-8] of focused view
    riverctl map normal $mod+Shift+Control $i toggle-view-tags $tags
done

# Mod+0 to focus all tags
# Mod+Shift+0 to tag focused view with all tags
all_tags=$(("(1 << 32) - 1"))
riverctl map normal $mod 0 set-focused-tags $all_tags
riverctl map normal $mod+Shift 0 set-view-tags $all_tags

# Mod+Space to toggle float
# riverctl map normal $mod Space toggle-float
riverctl map normal $mod G toggle-float

# Mod+F to toggle fullscreen
# riverctl map normal $mod F toggle-fullscreen

# Mod+{Up,Right,Down,Left} to change layout orientation
# riverctl map normal $mod Up    set-layout-value rivertile string main_location top
# riverctl map normal $mod Right set-layout-value rivertile string main_location right
# riverctl map normal $mod Down  set-layout-value rivertile string main_location bottom
# riverctl map normal $mod Left  set-layout-value rivertile string main_location left

# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

# Mod+F11 to enter passthrough mode
riverctl map normal $mod F11 enter-mode passthrough

# Mod+F11 to return to normal mode
riverctl map passthrough $mod F11 enter-mode normal

# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked
do
    # Eject the optical drive
    # riverctl map $mode None XF86Eject spawn eject -T

    # Control pulse audio volume with pamixer (https://github.com/cdemoulins/pamixer)
    # riverctl map $mode None XF86AudioRaiseVolume  spawn pamixer -i 5
    # riverctl map $mode None XF86AudioLowerVolume  spawn pamixer -d 5
    # riverctl map $mode None XF86AudioMute         spawn pamixer --toggle-mute
    riverctl map $mode None XF86AudioRaiseVolume  spawn "pactl set-sink-volume @DEFAULT_SINK@ +2%"
    riverctl map $mode None XF86AudioLowerVolume  spawn "pactl set-sink-volume @DEFAULT_SINK@ -2%"
    riverctl map $mode None XF86AudioMute         spawn "pactl set-sink-mute @DEFAULT_SINK@ toggle"
    riverctl map $mode None XF86AudioMicMute      spawn "pactl set-source-mute @DEFAULT_SOURCE@ toggle"

    # Control MPRIS aware media players with playerctl (https://github.com/altdesktop/playerctl)
    # riverctl map $mode None XF86AudioMedia spawn playerctl play-pause
    # riverctl map $mode None XF86AudioPlay  spawn playerctl play-pause
    # riverctl map $mode None XF86AudioPrev  spawn playerctl previous
    # riverctl map $mode None XF86AudioNext  spawn playerctl next

    # Control screen backlight brighness with light (https://github.com/haikarainen/light)
    # riverctl map $mode None XF86MonBrightnessUp   spawn light -A 5
    # riverctl map $mode None XF86MonBrightnessDown spawn light -U 5
    riverctl map $mode None XF86MonBrightnessUp   spawn "brightnessctk set +5%"
    riverctl map $mode None XF86MonBrightnessDown spawn "brightnessctk set 5%-"
done

# Set repeat rate
# Note(2021-10-10): there is currently a bug with electron (https://github.com/microsoft/vscode/issues/125666)
#   where it treats the repeat rate (== characters per second) as repeat interval (== time between repeats).
#   As a workaround, set `repeat_rate â‰ˆ sqrt(1000)`
set repeat_rate=30
set repeat_delay=300
riverctl set-repeat $repeat_rate $repeat_delay

# Set app-ids of views which should float
# riverctl float-filter-add app-id "float"
# riverctl float-filter-add app-id "popup"
riverctl float-filter-add app-id "Rofi"
riverctl float-filter-add title "Firefox - Sharing Indicator"

# Set app-ids of views which should use client side decorations
# riverctl csd-filter-add "gedit"

# Set opacity and fade effect
# riverctl opacity 1.0 0.75 0.0 0.1 20

riverctl map normal $mod D       spawn "rofi -show drun -normal-window | xargs riverctl spawn --"
riverctl map normal $mod F       spawn "env MOZ_ENABLE_WAYLAND=1 firefox"
riverctl map normal $mod+Shift F spawn "env MOZ_ENABLE_WAYLAND=1 firefox --private-window"

# riverctl declare-mode resize
# riverctl map normal $mod R enter-mode resize
# riverctl map resize Escape enter-mode normal

# pkill --exact swaybg
# pkill --exact waybar
# pkill --exact rivertile

riverctl spawn "swaybg --image $HOME/pictures/wallpaper/sunless_sea_eye.jpg --mode stretch"

riverctl spawn "swayidle -w \
    timeout 300 'if pgrep -x swaylock; then swaymsg \"output * dpms off\"; fi' resume 'swaymsg \"output * dpms on\"' \
    before-sleep $HOME/.config/sway/lock.sh"


riverctl spawn "waybar --style $HOME/.config/waybar/style_river.css"

riverctl border-color-focused   "0x7daea3"
riverctl border-color-unfocused "0x00000000"
riverctl border-color-urgent    "0xea6962"
riverctl border-width 3

# Set and exec into the default layout generator, rivertile.
# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout rivertile
# exec rivertile -outer-padding 0 -view-padding 4
riverctl spawn "rivertile -outer-padding 0 -view-padding 4"

